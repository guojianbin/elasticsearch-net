:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/5.3

:xpack_current: https://www.elastic.co/guide/en/x-pack/5.3

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/5.x/src/Tests/QueryDsl/Geo/DistanceRange/GeoDistanceRangeQueryUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[geo-distance-range-query-usage]]
=== Geo Distance Range Query Usage

==== Fluent DSL example

[source,csharp]
----
q
.GeoDistanceRange(g=>g
    .Boost(1.1)
    .Name("named_query")
    .Field(p=>p.Location)
    .DistanceType(GeoDistanceType.Arc)
    .GreaterThanOrEqualTo(200, DistanceUnit.Kilometers)
    .GreaterThan(200, DistanceUnit.Kilometers)
    .Location(new GeoLocation(40, -70))
    .Optimize(GeoOptimizeBBox.Indexed)
    .LessThanOrEqualTo(Nest.Distance.Miles(400))
    .LessThan(Nest.Distance.Miles(400))
    .ValidationMethod(GeoValidationMethod.Strict)
)
----

==== Object Initializer syntax example

[source,csharp]
----
new GeoDistanceRangeQuery
{
    Boost = 1.1,
    Name = "named_query",
    Field = Infer.Field<Project>(p=>p.Location),
    DistanceType = GeoDistanceType.Arc,
    GreaterThanOrEqualTo = Nest.Distance.Kilometers(200),
    GreaterThan = Nest.Distance.Kilometers(200),
    LessThan = Nest.Distance.Miles(400),
    Location = new GeoLocation(40, -70),
    OptimizeBoundingBox = GeoOptimizeBBox.Indexed,
    LessThanOrEqualTo = Nest.Distance.Miles(400),
    ValidationMethod = GeoValidationMethod.Strict
}
----

[source,javascript]
.Example json output
----
{
  "geo_distance_range": {
    "gt": "200.0km",
    "gte": "200.0km",
    "lt": "400.0mi",
    "lte": "400.0mi",
    "distance_type": "arc",
    "optimize_bbox": "indexed",
    "validation_method": "strict",
    "_name": "named_query",
    "boost": 1.1,
    "location": {
      "lat": 40.0,
      "lon": -70.0
    }
  }
}
----

